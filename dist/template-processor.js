"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processTemplate = processTemplate;
exports.replaceTemplate = replaceTemplate;

var _immutable = require("immutable");

var _ramdaFantasy = require("ramda-fantasy");

var _ramda = require("ramda");

var _ramda2 = _interopRequireDefault(_ramda);

var _syntax = require("./syntax");

var _syntax2 = _interopRequireDefault(_syntax);

var _errors = require("./errors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDolar_700 = function isDolar_700(s_708) {
  return s_708 && s_708 instanceof _syntax2.default && s_708.isIdentifier() && s_708.val() === "$";
};
var isDelimiter_701 = function isDelimiter_701(s_709) {
  return s_709 && typeof s_709.isDelimiter === "function" && s_709.isDelimiter();
};
var isBraces_702 = function isBraces_702(s_710) {
  return s_710 && typeof s_710.isBraces === "function" && s_710.isBraces();
};
var isParens_703 = function isParens_703(s_711) {
  return s_711 && typeof s_711.isParens === "function" && s_711.isParens();
};
var isBrackets_704 = function isBrackets_704(s_712) {
  return s_712 && typeof s_712.isBrackets === "function" && s_712.isBrackets();
};
var insertIntoDelimiter_705 = _ramda2.default.cond([[isBraces_702, function (s_713, r_714) {
  return _syntax2.default.fromBraces(r_714, s_713);
}], [isParens_703, function (s_715, r_716) {
  return _syntax2.default.fromParens(r_716, s_715);
}], [isBrackets_704, function (s_717, r_718) {
  return _syntax2.default.fromBrackets(r_718, s_717);
}]]);
var process_706 = function process_706(acc_719, s_720) {
  if (isBraces_702(s_720) && isDolar_700(acc_719.template.last())) {
    return { template: acc_719.template.push(_syntax2.default.fromBraces(_immutable.List.of(_syntax2.default.fromNumber(acc_719.interp.size)), s_720)), interp: acc_719.interp.push(s_720.inner()) };
  } else if (isDelimiter_701(s_720)) {
    var innerResult = processTemplate(s_720.inner(), acc_719.interp);
    return { template: acc_719.template.push(insertIntoDelimiter_705(s_720, innerResult.template)), interp: innerResult.interp };
  } else {
    return { template: acc_719.template.push(s_720), interp: acc_719.interp };
  }
};
var replace_707 = function replace_707(acc_721, s_722) {
  if (isBraces_702(s_722) && isDolar_700(acc_721.template.last())) {
    var index = s_722.inner().first().val();
    (0, _errors.assert)(acc_721.rep.size > index, "unknown replacement value");
    return { template: acc_721.template.pop().concat(acc_721.rep.get(index)), rep: acc_721.rep };
  } else if (isDelimiter_701(s_722)) {
    var innerResult = replaceTemplate(s_722.inner(), acc_721.rep);
    return { template: acc_721.template.push(insertIntoDelimiter_705(s_722, innerResult)), rep: acc_721.rep };
  } else {
    return { template: acc_721.template.push(s_722), rep: acc_721.rep };
  }
};
function processTemplate(temp_723) {
  var interp_724 = arguments.length <= 1 || arguments[1] === undefined ? (0, _immutable.List)() : arguments[1];

  return temp_723.reduce(process_706, { template: (0, _immutable.List)(), interp: interp_724 });
}
function replaceTemplate(temp_725, rep_726) {
  return temp_725.reduce(replace_707, { template: (0, _immutable.List)(), rep: rep_726 }).template;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L3RlbXBsYXRlLXByb2Nlc3Nvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztRQWlDZ0IsZUFBZSxHQUFmLGVBQWU7UUFHZixlQUFlLEdBQWYsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBL0IvQixJQUFNLFdBQVcsR0FBRyxTQUFkLFdBQVcsQ0FBRyxLQUFLO1NBQUksS0FBSyxJQUFJLEtBQUssNEJBQWtCLElBQUksS0FBSyxDQUFDLFlBQVksRUFBRSxJQUFJLEtBQUssQ0FBQyxHQUFHLEVBQUUsS0FBSyxHQUFHO0NBQUEsQ0FBQztBQUM3RyxJQUFNLGVBQWUsR0FBRyxTQUFsQixlQUFlLENBQUcsS0FBSztTQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxXQUFXLEtBQUssVUFBVSxJQUFJLEtBQUssQ0FBQyxXQUFXLEVBQUU7Q0FBQSxDQUFDO0FBQ3pHLElBQU0sWUFBWSxHQUFHLFNBQWYsWUFBWSxDQUFHLEtBQUs7U0FBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsUUFBUSxLQUFLLFVBQVUsSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO0NBQUEsQ0FBQztBQUNoRyxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQVksQ0FBRyxLQUFLO1NBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsS0FBSyxVQUFVLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtDQUFBLENBQUM7QUFDaEcsSUFBTSxjQUFjLEdBQUcsU0FBakIsY0FBYyxDQUFHLEtBQUs7U0FBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsVUFBVSxLQUFLLFVBQVUsSUFBSSxLQUFLLENBQUMsVUFBVSxFQUFFO0NBQUEsQ0FBQztBQUN0RyxJQUFNLHVCQUF1QixHQUFHLGdCQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLFVBQUMsS0FBSyxFQUFFLEtBQUs7U0FBSyxpQkFBTyxVQUFVLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztDQUFBLENBQUMs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QUFDO0FBQ0ssU0FBUyxlQUFlLENBQUMsUUFBUSxFQUF1QjtNQUFyQixVQUFVLHlEQUFHLHNCQUFNOztBQUMzRCxTQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLEVBQUMsUUFBUSxFQUFFLHNCQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUM7Q0FDN0U7QUFDTSxTQUFTLGVBQWUsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFO0FBQ2pELFNBQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBQyxRQUFRLEVBQUUsc0JBQU0sRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7Q0FDaEYiLCJmaWxlIjoidGVtcGxhdGUtcHJvY2Vzc29yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtMaXN0fSBmcm9tIFwiaW1tdXRhYmxlXCI7XG5pbXBvcnQge01heWJlfSBmcm9tIFwicmFtZGEtZmFudGFzeVwiO1xuaW1wb3J0IF8gZnJvbSBcInJhbWRhXCI7XG5pbXBvcnQgU3ludGF4IGZyb20gXCIuL3N5bnRheFwiO1xuaW1wb3J0IHthc3NlcnR9IGZyb20gXCIuL2Vycm9yc1wiO1xuY29uc3QgaXNEb2xhcl83MDAgPSBzXzcwOCA9PiBzXzcwOCAmJiBzXzcwOCBpbnN0YW5jZW9mIFN5bnRheCAmJiBzXzcwOC5pc0lkZW50aWZpZXIoKSAmJiBzXzcwOC52YWwoKSA9PT0gXCIkXCI7XG5jb25zdCBpc0RlbGltaXRlcl83MDEgPSBzXzcwOSA9PiBzXzcwOSAmJiB0eXBlb2Ygc183MDkuaXNEZWxpbWl0ZXIgPT09IFwiZnVuY3Rpb25cIiAmJiBzXzcwOS5pc0RlbGltaXRlcigpO1xuY29uc3QgaXNCcmFjZXNfNzAyID0gc183MTAgPT4gc183MTAgJiYgdHlwZW9mIHNfNzEwLmlzQnJhY2VzID09PSBcImZ1bmN0aW9uXCIgJiYgc183MTAuaXNCcmFjZXMoKTtcbmNvbnN0IGlzUGFyZW5zXzcwMyA9IHNfNzExID0+IHNfNzExICYmIHR5cGVvZiBzXzcxMS5pc1BhcmVucyA9PT0gXCJmdW5jdGlvblwiICYmIHNfNzExLmlzUGFyZW5zKCk7XG5jb25zdCBpc0JyYWNrZXRzXzcwNCA9IHNfNzEyID0+IHNfNzEyICYmIHR5cGVvZiBzXzcxMi5pc0JyYWNrZXRzID09PSBcImZ1bmN0aW9uXCIgJiYgc183MTIuaXNCcmFja2V0cygpO1xuY29uc3QgaW5zZXJ0SW50b0RlbGltaXRlcl83MDUgPSBfLmNvbmQoW1tpc0JyYWNlc183MDIsIChzXzcxMywgcl83MTQpID0+IFN5bnRheC5mcm9tQnJhY2VzKHJfNzE0LCBzXzcxMyldLCBbaXNQYXJlbnNfNzAzLCAoc183MTUsIHJfNzE2KSA9PiBTeW50YXguZnJvbVBhcmVucyhyXzcxNiwgc183MTUpXSwgW2lzQnJhY2tldHNfNzA0LCAoc183MTcsIHJfNzE4KSA9PiBTeW50YXguZnJvbUJyYWNrZXRzKHJfNzE4LCBzXzcxNyldXSk7XG5jb25zdCBwcm9jZXNzXzcwNiA9IChhY2NfNzE5LCBzXzcyMCkgPT4ge1xuICBpZiAoaXNCcmFjZXNfNzAyKHNfNzIwKSAmJiBpc0RvbGFyXzcwMChhY2NfNzE5LnRlbXBsYXRlLmxhc3QoKSkpIHtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzE5LnRlbXBsYXRlLnB1c2goU3ludGF4LmZyb21CcmFjZXMoTGlzdC5vZihTeW50YXguZnJvbU51bWJlcihhY2NfNzE5LmludGVycC5zaXplKSksIHNfNzIwKSksIGludGVycDogYWNjXzcxOS5pbnRlcnAucHVzaChzXzcyMC5pbm5lcigpKX07XG4gIH0gZWxzZSBpZiAoaXNEZWxpbWl0ZXJfNzAxKHNfNzIwKSkge1xuICAgIGxldCBpbm5lclJlc3VsdCA9IHByb2Nlc3NUZW1wbGF0ZShzXzcyMC5pbm5lcigpLCBhY2NfNzE5LmludGVycCk7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxOS50ZW1wbGF0ZS5wdXNoKGluc2VydEludG9EZWxpbWl0ZXJfNzA1KHNfNzIwLCBpbm5lclJlc3VsdC50ZW1wbGF0ZSkpLCBpbnRlcnA6IGlubmVyUmVzdWx0LmludGVycH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxOS50ZW1wbGF0ZS5wdXNoKHNfNzIwKSwgaW50ZXJwOiBhY2NfNzE5LmludGVycH07XG4gIH1cbn07XG5jb25zdCByZXBsYWNlXzcwNyA9IChhY2NfNzIxLCBzXzcyMikgPT4ge1xuICBpZiAoaXNCcmFjZXNfNzAyKHNfNzIyKSAmJiBpc0RvbGFyXzcwMChhY2NfNzIxLnRlbXBsYXRlLmxhc3QoKSkpIHtcbiAgICBsZXQgaW5kZXggPSBzXzcyMi5pbm5lcigpLmZpcnN0KCkudmFsKCk7XG4gICAgYXNzZXJ0KGFjY183MjEucmVwLnNpemUgPiBpbmRleCwgXCJ1bmtub3duIHJlcGxhY2VtZW50IHZhbHVlXCIpO1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MjEudGVtcGxhdGUucG9wKCkuY29uY2F0KGFjY183MjEucmVwLmdldChpbmRleCkpLCByZXA6IGFjY183MjEucmVwfTtcbiAgfSBlbHNlIGlmIChpc0RlbGltaXRlcl83MDEoc183MjIpKSB7XG4gICAgbGV0IGlubmVyUmVzdWx0ID0gcmVwbGFjZVRlbXBsYXRlKHNfNzIyLmlubmVyKCksIGFjY183MjEucmVwKTtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzIxLnRlbXBsYXRlLnB1c2goaW5zZXJ0SW50b0RlbGltaXRlcl83MDUoc183MjIsIGlubmVyUmVzdWx0KSksIHJlcDogYWNjXzcyMS5yZXB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MjEudGVtcGxhdGUucHVzaChzXzcyMiksIHJlcDogYWNjXzcyMS5yZXB9O1xuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NUZW1wbGF0ZSh0ZW1wXzcyMywgaW50ZXJwXzcyNCA9IExpc3QoKSkge1xuICByZXR1cm4gdGVtcF83MjMucmVkdWNlKHByb2Nlc3NfNzA2LCB7dGVtcGxhdGU6IExpc3QoKSwgaW50ZXJwOiBpbnRlcnBfNzI0fSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVwbGFjZVRlbXBsYXRlKHRlbXBfNzI1LCByZXBfNzI2KSB7XG4gIHJldHVybiB0ZW1wXzcyNS5yZWR1Y2UocmVwbGFjZV83MDcsIHt0ZW1wbGF0ZTogTGlzdCgpLCByZXA6IHJlcF83MjZ9KS50ZW1wbGF0ZTtcbn1cbiJdfQ==