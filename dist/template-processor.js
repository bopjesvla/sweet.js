"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processTemplate = processTemplate;
exports.replaceTemplate = replaceTemplate;

var _immutable = require("immutable");

var _ramdaFantasy = require("ramda-fantasy");

var _ramda = require("ramda");

var _ramda2 = _interopRequireDefault(_ramda);

var _syntax = require("./syntax");

var _syntax2 = _interopRequireDefault(_syntax);

var _errors = require("./errors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDolar_696 = function isDolar_696(s_704) {
  return s_704 && s_704 instanceof _syntax2.default && s_704.isIdentifier() && s_704.val() === "$";
};
var isDelimiter_697 = function isDelimiter_697(s_705) {
  return s_705 && typeof s_705.isDelimiter === "function" && s_705.isDelimiter();
};
var isBraces_698 = function isBraces_698(s_706) {
  return s_706 && typeof s_706.isBraces === "function" && s_706.isBraces();
};
var isParens_699 = function isParens_699(s_707) {
  return s_707 && typeof s_707.isParens === "function" && s_707.isParens();
};
var isBrackets_700 = function isBrackets_700(s_708) {
  return s_708 && typeof s_708.isBrackets === "function" && s_708.isBrackets();
};
var insertIntoDelimiter_701 = _ramda2.default.cond([[isBraces_698, function (s_709, r_710) {
  return _syntax2.default.fromBraces(r_710, s_709);
}], [isParens_699, function (s_711, r_712) {
  return _syntax2.default.fromParens(r_712, s_711);
}], [isBrackets_700, function (s_713, r_714) {
  return _syntax2.default.fromBrackets(r_714, s_713);
}]]);
var process_702 = function process_702(acc_715, s_716) {
  if (isBraces_698(s_716) && isDolar_696(acc_715.template.last())) {
    return { template: acc_715.template.push(_syntax2.default.fromBraces(_immutable.List.of(_syntax2.default.fromNumber(acc_715.interp.size)), s_716)), interp: acc_715.interp.push(s_716.inner()) };
  } else if (isDelimiter_697(s_716)) {
    var innerResult = processTemplate(s_716.inner(), acc_715.interp);
    return { template: acc_715.template.push(insertIntoDelimiter_701(s_716, innerResult.template)), interp: innerResult.interp };
  } else {
    return { template: acc_715.template.push(s_716), interp: acc_715.interp };
  }
};
var replace_703 = function replace_703(acc_717, s_718) {
  if (isBraces_698(s_718) && isDolar_696(acc_717.template.last())) {
    var index = s_718.inner().first().val();
    (0, _errors.assert)(acc_717.rep.size > index, "unknown replacement value");
    return { template: acc_717.template.pop().concat(acc_717.rep.get(index)), rep: acc_717.rep };
  } else if (isDelimiter_697(s_718)) {
    var innerResult = replaceTemplate(s_718.inner(), acc_717.rep);
    return { template: acc_717.template.push(insertIntoDelimiter_701(s_718, innerResult)), rep: acc_717.rep };
  } else {
    return { template: acc_717.template.push(s_718), rep: acc_717.rep };
  }
};
function processTemplate(temp_719) {
  var interp_720 = arguments.length <= 1 || arguments[1] === undefined ? (0, _immutable.List)() : arguments[1];

  return temp_719.reduce(process_702, { template: (0, _immutable.List)(), interp: interp_720 });
}
function replaceTemplate(temp_721, rep_722) {
  return temp_721.reduce(replace_703, { template: (0, _immutable.List)(), rep: rep_722 }).template;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L3RlbXBsYXRlLXByb2Nlc3Nvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztRQWlDZ0IsZUFBZSxHQUFmLGVBQWU7UUFHZixlQUFlLEdBQWYsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBL0IvQixJQUFNLFdBQVcsR0FBRyxTQUFkLFdBQVcsQ0FBRyxLQUFLO1NBQUksS0FBSyxJQUFJLEtBQUssNEJBQWtCLElBQUksS0FBSyxDQUFDLFlBQVksRUFBRSxJQUFJLEtBQUssQ0FBQyxHQUFHLEVBQUUsS0FBSyxHQUFHO0NBQUEsQ0FBQztBQUM3RyxJQUFNLGVBQWUsR0FBRyxTQUFsQixlQUFlLENBQUcsS0FBSztTQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssQ0FBQyxXQUFXLEtBQUssVUFBVSxJQUFJLEtBQUssQ0FBQyxXQUFXLEVBQUU7Q0FBQSxDQUFDO0FBQ3pHLElBQU0sWUFBWSxHQUFHLFNBQWYsWUFBWSxDQUFHLEtBQUs7U0FBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsUUFBUSxLQUFLLFVBQVUsSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO0NBQUEsQ0FBQztBQUNoRyxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQVksQ0FBRyxLQUFLO1NBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsS0FBSyxVQUFVLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtDQUFBLENBQUM7QUFDaEcsSUFBTSxjQUFjLEdBQUcsU0FBakIsY0FBYyxDQUFHLEtBQUs7U0FBSSxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsVUFBVSxLQUFLLFVBQVUsSUFBSSxLQUFLLENBQUMsVUFBVSxFQUFFO0NBQUEsQ0FBQztBQUN0RyxJQUFNLHVCQUF1QixHQUFHLGdCQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsWUFBWSxFQUFFLFVBQUMsS0FBSyxFQUFFLEtBQUs7U0FBSyxpQkFBTyxVQUFVLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztDQUFBLENBQUMs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QUFDO0FBQ0ssU0FBUyxlQUFlLENBQUMsUUFBUSxFQUF1QjtNQUFyQixVQUFVLHlEQUFHLHNCQUFNOztBQUMzRCxTQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLEVBQUMsUUFBUSxFQUFFLHNCQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUM7Q0FDN0U7QUFDTSxTQUFTLGVBQWUsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFO0FBQ2pELFNBQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBQyxRQUFRLEVBQUUsc0JBQU0sRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7Q0FDaEYiLCJmaWxlIjoidGVtcGxhdGUtcHJvY2Vzc29yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtMaXN0fSBmcm9tIFwiaW1tdXRhYmxlXCI7XG5pbXBvcnQge01heWJlfSBmcm9tIFwicmFtZGEtZmFudGFzeVwiO1xuaW1wb3J0IF8gZnJvbSBcInJhbWRhXCI7XG5pbXBvcnQgU3ludGF4IGZyb20gXCIuL3N5bnRheFwiO1xuaW1wb3J0IHthc3NlcnR9IGZyb20gXCIuL2Vycm9yc1wiO1xuY29uc3QgaXNEb2xhcl82OTYgPSBzXzcwNCA9PiBzXzcwNCAmJiBzXzcwNCBpbnN0YW5jZW9mIFN5bnRheCAmJiBzXzcwNC5pc0lkZW50aWZpZXIoKSAmJiBzXzcwNC52YWwoKSA9PT0gXCIkXCI7XG5jb25zdCBpc0RlbGltaXRlcl82OTcgPSBzXzcwNSA9PiBzXzcwNSAmJiB0eXBlb2Ygc183MDUuaXNEZWxpbWl0ZXIgPT09IFwiZnVuY3Rpb25cIiAmJiBzXzcwNS5pc0RlbGltaXRlcigpO1xuY29uc3QgaXNCcmFjZXNfNjk4ID0gc183MDYgPT4gc183MDYgJiYgdHlwZW9mIHNfNzA2LmlzQnJhY2VzID09PSBcImZ1bmN0aW9uXCIgJiYgc183MDYuaXNCcmFjZXMoKTtcbmNvbnN0IGlzUGFyZW5zXzY5OSA9IHNfNzA3ID0+IHNfNzA3ICYmIHR5cGVvZiBzXzcwNy5pc1BhcmVucyA9PT0gXCJmdW5jdGlvblwiICYmIHNfNzA3LmlzUGFyZW5zKCk7XG5jb25zdCBpc0JyYWNrZXRzXzcwMCA9IHNfNzA4ID0+IHNfNzA4ICYmIHR5cGVvZiBzXzcwOC5pc0JyYWNrZXRzID09PSBcImZ1bmN0aW9uXCIgJiYgc183MDguaXNCcmFja2V0cygpO1xuY29uc3QgaW5zZXJ0SW50b0RlbGltaXRlcl83MDEgPSBfLmNvbmQoW1tpc0JyYWNlc182OTgsIChzXzcwOSwgcl83MTApID0+IFN5bnRheC5mcm9tQnJhY2VzKHJfNzEwLCBzXzcwOSldLCBbaXNQYXJlbnNfNjk5LCAoc183MTEsIHJfNzEyKSA9PiBTeW50YXguZnJvbVBhcmVucyhyXzcxMiwgc183MTEpXSwgW2lzQnJhY2tldHNfNzAwLCAoc183MTMsIHJfNzE0KSA9PiBTeW50YXguZnJvbUJyYWNrZXRzKHJfNzE0LCBzXzcxMyldXSk7XG5jb25zdCBwcm9jZXNzXzcwMiA9IChhY2NfNzE1LCBzXzcxNikgPT4ge1xuICBpZiAoaXNCcmFjZXNfNjk4KHNfNzE2KSAmJiBpc0RvbGFyXzY5NihhY2NfNzE1LnRlbXBsYXRlLmxhc3QoKSkpIHtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzE1LnRlbXBsYXRlLnB1c2goU3ludGF4LmZyb21CcmFjZXMoTGlzdC5vZihTeW50YXguZnJvbU51bWJlcihhY2NfNzE1LmludGVycC5zaXplKSksIHNfNzE2KSksIGludGVycDogYWNjXzcxNS5pbnRlcnAucHVzaChzXzcxNi5pbm5lcigpKX07XG4gIH0gZWxzZSBpZiAoaXNEZWxpbWl0ZXJfNjk3KHNfNzE2KSkge1xuICAgIGxldCBpbm5lclJlc3VsdCA9IHByb2Nlc3NUZW1wbGF0ZShzXzcxNi5pbm5lcigpLCBhY2NfNzE1LmludGVycCk7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxNS50ZW1wbGF0ZS5wdXNoKGluc2VydEludG9EZWxpbWl0ZXJfNzAxKHNfNzE2LCBpbm5lclJlc3VsdC50ZW1wbGF0ZSkpLCBpbnRlcnA6IGlubmVyUmVzdWx0LmludGVycH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxNS50ZW1wbGF0ZS5wdXNoKHNfNzE2KSwgaW50ZXJwOiBhY2NfNzE1LmludGVycH07XG4gIH1cbn07XG5jb25zdCByZXBsYWNlXzcwMyA9IChhY2NfNzE3LCBzXzcxOCkgPT4ge1xuICBpZiAoaXNCcmFjZXNfNjk4KHNfNzE4KSAmJiBpc0RvbGFyXzY5NihhY2NfNzE3LnRlbXBsYXRlLmxhc3QoKSkpIHtcbiAgICBsZXQgaW5kZXggPSBzXzcxOC5pbm5lcigpLmZpcnN0KCkudmFsKCk7XG4gICAgYXNzZXJ0KGFjY183MTcucmVwLnNpemUgPiBpbmRleCwgXCJ1bmtub3duIHJlcGxhY2VtZW50IHZhbHVlXCIpO1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MTcudGVtcGxhdGUucG9wKCkuY29uY2F0KGFjY183MTcucmVwLmdldChpbmRleCkpLCByZXA6IGFjY183MTcucmVwfTtcbiAgfSBlbHNlIGlmIChpc0RlbGltaXRlcl82OTcoc183MTgpKSB7XG4gICAgbGV0IGlubmVyUmVzdWx0ID0gcmVwbGFjZVRlbXBsYXRlKHNfNzE4LmlubmVyKCksIGFjY183MTcucmVwKTtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzE3LnRlbXBsYXRlLnB1c2goaW5zZXJ0SW50b0RlbGltaXRlcl83MDEoc183MTgsIGlubmVyUmVzdWx0KSksIHJlcDogYWNjXzcxNy5yZXB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MTcudGVtcGxhdGUucHVzaChzXzcxOCksIHJlcDogYWNjXzcxNy5yZXB9O1xuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NUZW1wbGF0ZSh0ZW1wXzcxOSwgaW50ZXJwXzcyMCA9IExpc3QoKSkge1xuICByZXR1cm4gdGVtcF83MTkucmVkdWNlKHByb2Nlc3NfNzAyLCB7dGVtcGxhdGU6IExpc3QoKSwgaW50ZXJwOiBpbnRlcnBfNzIwfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVwbGFjZVRlbXBsYXRlKHRlbXBfNzIxLCByZXBfNzIyKSB7XG4gIHJldHVybiB0ZW1wXzcyMS5yZWR1Y2UocmVwbGFjZV83MDMsIHt0ZW1wbGF0ZTogTGlzdCgpLCByZXA6IHJlcF83MjJ9KS50ZW1wbGF0ZTtcbn1cbiJdfQ==