"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.operatorLt = operatorLt;
exports.getOperatorPrec = getOperatorPrec;
exports.getOperatorAssoc = getOperatorAssoc;
exports.isUnaryOperator = isUnaryOperator;
exports.isOperator = isOperator;
var unaryOperators_404 = { "+": true, "-": true, "!": true, "~": true, "++": true, "--": true, typeof: true, void: true, delete: true };
var binaryOperatorPrecedence_405 = { "*": 13, "/": 13, "%": 13, "+": 12, "-": 12, ">>": 11, "<<": 11, ">>>": 11, "<": 10, "<=": 10, ">": 10, ">=": 10, in: 10, instanceof: 10, "==": 9, "!=": 9, "===": 9, "!==": 9, "&": 8, "^": 7, "|": 6, "&&": 5, "||": 4 };
var operatorAssoc_406 = { "*": "left", "/": "left", "%": "left", "+": "left", "-": "left", ">>": "left", "<<": "left", ">>>": "left", "<": "left", "<=": "left", ">": "left", ">=": "left", in: "left", instanceof: "left", "==": "left", "!=": "left", "===": "left", "!==": "left", "&": "left", "^": "left", "|": "left", "&&": "left", "||": "left" };
function operatorLt(left_407, right_408, assoc_409) {
  if (assoc_409 === "left") {
    return left_407 < right_408;
  } else {
    return left_407 <= right_408;
  }
}
function getOperatorPrec(op_410) {
  return binaryOperatorPrecedence_405[op_410];
}
function getOperatorAssoc(op_411) {
  return operatorAssoc_406[op_411];
}
function isUnaryOperator(op_412) {
  return (op_412.isPunctuator() || op_412.isIdentifier() || op_412.isKeyword()) && unaryOperators_404.hasOwnProperty(op_412.val());
}
function isOperator(op_413) {
  if (op_413.isPunctuator() || op_413.isIdentifier() || op_413.isKeyword()) {
    return binaryOperatorPrecedence_405.hasOwnProperty(op_413) || unaryOperators_404.hasOwnProperty(op_413.val());
  }
  return false;
}
//# sourceMappingURL=data:application/json;base64,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Q0FBQyxTQUFTLEVBQUUsQ0FBQSxJQUFLLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztDQUNsSTtBQUNNLFNBQVMsVUFBVSxDQUFDLE1BQU0sRUFBRTtBQUNqQyxNQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUUsSUFBSSxNQUFNLENBQUMsWUFBWSxFQUFFLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUFFO0FBQ3hFLFdBQU8sNEJBQTRCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztHQUMvRztBQUNELFNBQU8sS0FBSyxDQUFDO0NBQ2QiLCJmaWxlIjoib3BlcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdW5hcnlPcGVyYXRvcnNfNDA0ID0ge1wiK1wiOiB0cnVlLCBcIi1cIjogdHJ1ZSwgXCIhXCI6IHRydWUsIFwiflwiOiB0cnVlLCBcIisrXCI6IHRydWUsIFwiLS1cIjogdHJ1ZSwgdHlwZW9mOiB0cnVlLCB2b2lkOiB0cnVlLCBkZWxldGU6IHRydWV9O1xuY29uc3QgYmluYXJ5T3BlcmF0b3JQcmVjZWRlbmNlXzQwNSA9IHtcIipcIjogMTMsIFwiL1wiOiAxMywgXCIlXCI6IDEzLCBcIitcIjogMTIsIFwiLVwiOiAxMiwgXCI+PlwiOiAxMSwgXCI8PFwiOiAxMSwgXCI+Pj5cIjogMTEsIFwiPFwiOiAxMCwgXCI8PVwiOiAxMCwgXCI+XCI6IDEwLCBcIj49XCI6IDEwLCBpbjogMTAsIGluc3RhbmNlb2Y6IDEwLCBcIj09XCI6IDksIFwiIT1cIjogOSwgXCI9PT1cIjogOSwgXCIhPT1cIjogOSwgXCImXCI6IDgsIFwiXlwiOiA3LCBcInxcIjogNiwgXCImJlwiOiA1LCBcInx8XCI6IDR9O1xudmFyIG9wZXJhdG9yQXNzb2NfNDA2ID0ge1wiKlwiOiBcImxlZnRcIiwgXCIvXCI6IFwibGVmdFwiLCBcIiVcIjogXCJsZWZ0XCIsIFwiK1wiOiBcImxlZnRcIiwgXCItXCI6IFwibGVmdFwiLCBcIj4+XCI6IFwibGVmdFwiLCBcIjw8XCI6IFwibGVmdFwiLCBcIj4+PlwiOiBcImxlZnRcIiwgXCI8XCI6IFwibGVmdFwiLCBcIjw9XCI6IFwibGVmdFwiLCBcIj5cIjogXCJsZWZ0XCIsIFwiPj1cIjogXCJsZWZ0XCIsIGluOiBcImxlZnRcIiwgaW5zdGFuY2VvZjogXCJsZWZ0XCIsIFwiPT1cIjogXCJsZWZ0XCIsIFwiIT1cIjogXCJsZWZ0XCIsIFwiPT09XCI6IFwibGVmdFwiLCBcIiE9PVwiOiBcImxlZnRcIiwgXCImXCI6IFwibGVmdFwiLCBcIl5cIjogXCJsZWZ0XCIsIFwifFwiOiBcImxlZnRcIiwgXCImJlwiOiBcImxlZnRcIiwgXCJ8fFwiOiBcImxlZnRcIn07XG5leHBvcnQgZnVuY3Rpb24gb3BlcmF0b3JMdChsZWZ0XzQwNywgcmlnaHRfNDA4LCBhc3NvY180MDkpIHtcbiAgaWYgKGFzc29jXzQwOSA9PT0gXCJsZWZ0XCIpIHtcbiAgICByZXR1cm4gbGVmdF80MDcgPCByaWdodF80MDg7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGxlZnRfNDA3IDw9IHJpZ2h0XzQwODtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE9wZXJhdG9yUHJlYyhvcF80MTApIHtcbiAgcmV0dXJuIGJpbmFyeU9wZXJhdG9yUHJlY2VkZW5jZV80MDVbb3BfNDEwXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRvckFzc29jKG9wXzQxMSkge1xuICByZXR1cm4gb3BlcmF0b3JBc3NvY180MDZbb3BfNDExXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1VuYXJ5T3BlcmF0b3Iob3BfNDEyKSB7XG4gIHJldHVybiAob3BfNDEyLmlzUHVuY3R1YXRvcigpIHx8IG9wXzQxMi5pc0lkZW50aWZpZXIoKSB8fCBvcF80MTIuaXNLZXl3b3JkKCkpICYmIHVuYXJ5T3BlcmF0b3JzXzQwNC5oYXNPd25Qcm9wZXJ0eShvcF80MTIudmFsKCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT3BlcmF0b3Iob3BfNDEzKSB7XG4gIGlmIChvcF80MTMuaXNQdW5jdHVhdG9yKCkgfHwgb3BfNDEzLmlzSWRlbnRpZmllcigpIHx8IG9wXzQxMy5pc0tleXdvcmQoKSkge1xuICAgIHJldHVybiBiaW5hcnlPcGVyYXRvclByZWNlZGVuY2VfNDA1Lmhhc093blByb3BlcnR5KG9wXzQxMykgfHwgdW5hcnlPcGVyYXRvcnNfNDA0Lmhhc093blByb3BlcnR5KG9wXzQxMy52YWwoKSk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuIl19